# Generally placed in /etc/nginx/nginx.conf or /etc/nginx/conf.d/default.conf

# Basic process and connection handling configuration
# 'auto' usually detects the number of cores available (often 1 in Cloud Run)
worker_processes auto;
pid /run/nginx.pid;
# Include dynamic modules if built with them (common in standard images)
# include /etc/nginx/modules-enabled/*.conf;

# Set the file descriptor limit for worker processes
# Should be >= (worker_connections * 2)
worker_rlimit_nofile 2048;

events {
    # Number of simultaneous connections a worker process can handle
    # Adjust based on expected load per instance, 1024 is a common starting point
    worker_connections 1024;
}

http {
    # ========= Basic Settings =========
    sendfile on;            # More efficient file transfers
    tcp_nopush on;          # Optimize packet sending
    tcp_nodelay on;         # Send data immediately (good for interactive sites)
    keepalive_timeout 65;  # Keep connections open for a while
    types_hash_max_size 2048; # Increase hash size for MIME types
    server_tokens off;       # Don't advertise Nginx version

    # Include standard MIME types
    include /etc/nginx/mime.types;
    # Default type if MIME type is unknown
    default_type application/octet-stream;

    # ========= Logging =========
    # Log to stdout/stderr so Cloud Run logging captures it
    access_log /dev/stdout;
    error_log /dev/stderr warn;

    # ========= Compression =========
    # Enable gzip compression to reduce file sizes
    gzip on;
    gzip_vary on;            # Send Vary: Accept-Encoding header
    gzip_proxied any;        # Compress for all proxied requests
    gzip_comp_level 6;       # Compression level (1-9)
    gzip_buffers 16 8k;      # Number and size of buffers
    gzip_http_version 1.1;   # Minimum HTTP version
    gzip_min_length 256;     # Don't compress small files
    # Compress common web file types
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript
        application/x-javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript
        image/svg+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        font/opentype;

    # Cache 1000 file metadata entries for 60 seconds of inactivity.
    # Cache errors like 'not found' for 10 seconds.
    # Consider a file 'used' if accessed at least 2 times in 60 seconds.
    open_file_cache max=1000 inactive=60s;
    open_file_cache_valid 120s; # How long to cache metadata (existence, size etc)
    open_file_cache_min_uses 2; # How many times accessed before caching descriptor
    open_file_cache_errors on; # Cache errors (like 'file not found')

    # ========= Server Block =========
    server {
        # Listen on the port specified by Cloud Run ($PORT), default is 8080
        listen ${PORT} default_server;
        listen [::]:${PORT} default_server;

        # https://stackoverflow.com/questions/62648644/hosting-docusaurus-v2-using-nginx
        # prevent docusaurus to create a redirect to Cloud Run Endpoint or port 8080
        absolute_redirect off;

        # Set the root directory where Docusaurus build files are located
        # This MUST match the location in your Dockerfile's COPY command
        root /usr/share/nginx/html;

        # The default file to serve if a directory is requested
        index index.html;

        # Match any hostname passed in the request
        # Cloud Run handles the external domain mapping
        server_name _;

        # Handle static assets with long cache expiry
        location ~* \.(?:ico|css|js|gif|jpe?g|png|svg|woff|woff2|ttf|eot|map)$ {
             expires 7d;
             add_header Cache-Control "public";
             access_log off; # Optional: Turn off logging for static assets
        }

        # --- Core Docusaurus SPA Handling ---
        # All other requests fall through to here
        location / {
            # Try to serve the requested file ($uri)
            # If it's a directory, try serving $uri/ (looks for index.html)
            # If neither exists, serve /index.html (let Docusaurus router handle it)
            # If /index.html doesn't exist (shouldn't happen), return 404
            try_files $uri $uri/ /index.html =404;

            # --- Optional: Add Security Headers ---
            # Firebase Hosting may add/overwrite these, check its behavior
            # add_header X-Frame-Options "SAMEORIGIN" always;
            # add_header X-Content-Type-Options "nosniff" always;
            # add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self';" always; # Adjust CSP as needed!
        }

         # Optional: Deny access to hidden files (e.g., .git, .htaccess)
         location ~ /\. {
             deny all;
         }
    }
}
